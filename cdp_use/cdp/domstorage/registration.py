# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP DOMStorage Domain Event Registration"""

from typing import Callable, Optional, Protocol

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..registry import EventRegistry
    from .events import *

class DOMStorageRegistration:
    """Event registration interface for DOMStorage domain."""

    def __init__(self, registry: 'EventRegistry'):
        self._registry = registry
        self._domain = "DOMStorage"

    def dom_storage_item_added(
        self,
        callback: Callable[['DomStorageItemAddedEvent', Optional[str]], None],
    ) -> None:
        """
        Register a callback for domStorageItemAdded events.
        
        Args:
            callback: Function to call when event occurs.
                     Receives (event_data, session_id) as parameters.
        """
        self._registry.register("DOMStorage.domStorageItemAdded", callback)

    def dom_storage_item_removed(
        self,
        callback: Callable[['DomStorageItemRemovedEvent', Optional[str]], None],
    ) -> None:
        """
        Register a callback for domStorageItemRemoved events.
        
        Args:
            callback: Function to call when event occurs.
                     Receives (event_data, session_id) as parameters.
        """
        self._registry.register("DOMStorage.domStorageItemRemoved", callback)

    def dom_storage_item_updated(
        self,
        callback: Callable[['DomStorageItemUpdatedEvent', Optional[str]], None],
    ) -> None:
        """
        Register a callback for domStorageItemUpdated events.
        
        Args:
            callback: Function to call when event occurs.
                     Receives (event_data, session_id) as parameters.
        """
        self._registry.register("DOMStorage.domStorageItemUpdated", callback)

    def dom_storage_items_cleared(
        self,
        callback: Callable[['DomStorageItemsClearedEvent', Optional[str]], None],
    ) -> None:
        """
        Register a callback for domStorageItemsCleared events.
        
        Args:
            callback: Function to call when event occurs.
                     Receives (event_data, session_id) as parameters.
        """
        self._registry.register("DOMStorage.domStorageItemsCleared", callback)

