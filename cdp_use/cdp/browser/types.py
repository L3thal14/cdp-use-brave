# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Browser Domain Types"""

from enum import Enum
from typing import List
from typing_extensions import NotRequired, TypedDict

BrowserContextID = str



WindowID = int



class WindowState(Enum):
    """The state of the browser window."""
    NORMAL = "normal"
    MINIMIZED = "minimized"
    MAXIMIZED = "maximized"
    FULLSCREEN = "fullscreen"



class Bounds(TypedDict, total=False):
    """Browser window bounds information"""

    left: "int"
    """The offset from the left edge of the screen to the window in pixels."""
    top: "int"
    """The offset from the top edge of the screen to the window in pixels."""
    width: "int"
    """The window width in pixels."""
    height: "int"
    """The window height in pixels."""
    windowState: "WindowState"
    """The window state. Default to normal."""



class PermissionType(Enum):
    AR = "ar"
    AUDIOCAPTURE = "audioCapture"
    AUTOMATICFULLSCREEN = "automaticFullscreen"
    BACKGROUNDFETCH = "backgroundFetch"
    BACKGROUNDSYNC = "backgroundSync"
    CAMERAPANTILTZOOM = "cameraPanTiltZoom"
    CAPTUREDSURFACECONTROL = "capturedSurfaceControl"
    CLIPBOARDREADWRITE = "clipboardReadWrite"
    CLIPBOARDSANITIZEDWRITE = "clipboardSanitizedWrite"
    DISPLAYCAPTURE = "displayCapture"
    DURABLESTORAGE = "durableStorage"
    GEOLOCATION = "geolocation"
    HANDTRACKING = "handTracking"
    IDLEDETECTION = "idleDetection"
    KEYBOARDLOCK = "keyboardLock"
    LOCALFONTS = "localFonts"
    LOCALNETWORKACCESS = "localNetworkAccess"
    MIDI = "midi"
    MIDISYSEX = "midiSysex"
    NFC = "nfc"
    NOTIFICATIONS = "notifications"
    PAYMENTHANDLER = "paymentHandler"
    PERIODICBACKGROUNDSYNC = "periodicBackgroundSync"
    POINTERLOCK = "pointerLock"
    PROTECTEDMEDIAIDENTIFIER = "protectedMediaIdentifier"
    SENSORS = "sensors"
    SMARTCARD = "smartCard"
    SPEAKERSELECTION = "speakerSelection"
    STORAGEACCESS = "storageAccess"
    TOPLEVELSTORAGEACCESS = "topLevelStorageAccess"
    VIDEOCAPTURE = "videoCapture"
    VR = "vr"
    WAKELOCKSCREEN = "wakeLockScreen"
    WAKELOCKSYSTEM = "wakeLockSystem"
    WEBAPPINSTALLATION = "webAppInstallation"
    WEBPRINTING = "webPrinting"
    WINDOWMANAGEMENT = "windowManagement"



class PermissionSetting(Enum):
    GRANTED = "granted"
    DENIED = "denied"
    PROMPT = "prompt"



class PermissionDescriptor(TypedDict):
    """Definition of PermissionDescriptor defined in the Permissions API:
https://w3c.github.io/permissions/#dom-permissiondescriptor."""

    name: "str"
    """Name of permission.
See https://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/permissions/permission_descriptor.idl for valid permission names."""
    sysex: "NotRequired[bool]"
    """For \"midi\" permission, may also specify sysex control."""
    userVisibleOnly: "NotRequired[bool]"
    """For \"push\" permission, may specify userVisibleOnly.
Note that userVisibleOnly = true is the only currently supported type."""
    allowWithoutSanitization: "NotRequired[bool]"
    """For \"clipboard\" permission, may specify allowWithoutSanitization."""
    allowWithoutGesture: "NotRequired[bool]"
    """For \"fullscreen\" permission, must specify allowWithoutGesture:true."""
    panTiltZoom: "NotRequired[bool]"
    """For \"camera\" permission, may specify panTiltZoom."""



class BrowserCommandId(Enum):
    """Browser command ids used by executeBrowserCommand."""
    OPENTABSEARCH = "openTabSearch"
    CLOSETABSEARCH = "closeTabSearch"
    OPENGLIC = "openGlic"



class Bucket(TypedDict):
    """Chrome histogram bucket."""

    low: "int"
    """Minimum value (inclusive)."""
    high: "int"
    """Maximum value (exclusive)."""
    count: "int"
    """Number of samples."""



class Histogram(TypedDict):
    """Chrome histogram."""

    name: "str"
    """Name."""
    sum: "int"
    """Sum of sample values."""
    count: "int"
    """Total number of samples."""
    buckets: "List[Bucket]"
    """Buckets."""



class PrivacySandboxAPI(Enum):
    BIDDINGANDAUCTIONSERVICES = "BiddingAndAuctionServices"
    TRUSTEDKEYVALUE = "TrustedKeyValue"
